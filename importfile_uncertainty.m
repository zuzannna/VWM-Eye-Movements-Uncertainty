function [subject,run1,trial,accuracy,delay,disc_size,reward_at_stake,target_value,error1,memorandum_x,memorandum_y,actual_location_x,actual_location_y,target_loc_quadrant,target_loc_angle,distractor1_value,distractor1_loc_quadrant,distractor1_loc_angle,distractor2_value,distractor2_loc_quadrant,distractor2_loc_angle,distractor3_value,distractor3_loc_quadrant,distractor3_loc_angle,VarName25] = importfile(filename, startRow, endRow)
%IMPORTFILE Import numeric data from a text file as column vectors.
%   [SUBJECT,RUN1,TRIAL,ACCURACY,DELAY,DISC_SIZE,REWARD_AT_STAKE,TARGET_VALUE,ERROR1,MEMORANDUM_X,MEMORANDUM_Y,ACTUAL_LOCATION_X,ACTUAL_LOCATION_Y,TARGET_LOC_QUADRANT,TARGET_LOC_ANGLE,DISTRACTOR1_VALUE,DISTRACTOR1_LOC_QUADRANT,DISTRACTOR1_LOC_ANGLE,DISTRACTOR2_VALUE,DISTRACTOR2_LOC_QUADRANT,DISTRACTOR2_LOC_ANGLE,DISTRACTOR3_VALUE,DISTRACTOR3_LOC_QUADRANT,DISTRACTOR3_LOC_ANGLE,VARNAME25]
%   = IMPORTFILE(FILENAME) Reads data from text file FILENAME for the
%   default selection.
%
%   [SUBJECT,RUN1,TRIAL,ACCURACY,DELAY,DISC_SIZE,REWARD_AT_STAKE,TARGET_VALUE,ERROR1,MEMORANDUM_X,MEMORANDUM_Y,ACTUAL_LOCATION_X,ACTUAL_LOCATION_Y,TARGET_LOC_QUADRANT,TARGET_LOC_ANGLE,DISTRACTOR1_VALUE,DISTRACTOR1_LOC_QUADRANT,DISTRACTOR1_LOC_ANGLE,DISTRACTOR2_VALUE,DISTRACTOR2_LOC_QUADRANT,DISTRACTOR2_LOC_ANGLE,DISTRACTOR3_VALUE,DISTRACTOR3_LOC_QUADRANT,DISTRACTOR3_LOC_ANGLE,VARNAME25]
%   = IMPORTFILE(FILENAME, STARTROW, ENDROW) Reads data from rows STARTROW
%   through ENDROW of text file FILENAME.
%
% Example:
%   [subject,run1,trial,accuracy,delay,disc_size,reward_at_stake,target_value,error1,memorandum_x,memorandum_y,actual_location_x,actual_location_y,target_loc_quadrant,target_loc_angle,distractor1_value,distractor1_loc_quadrant,distractor1_loc_angle,distractor2_value,distractor2_loc_quadrant,distractor2_loc_angle,distractor3_value,distractor3_loc_quadrant,distractor3_loc_angle,VarName25]
%   = importfile('6_6.csv',2, 41);
%
%    See also TEXTSCAN.

% Auto-generated by MATLAB on 2016/05/04 14:56:03

%% Initialize variables.
delimiter = '\t';
if nargin<=2
    startRow = 2;
    endRow = inf;
end

%% Format string for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
%	column8: double (%f)
%   column9: double (%f)
%	column10: double (%f)
%   column11: double (%f)
%	column12: double (%f)
%   column13: double (%f)
%	column14: double (%f)
%   column15: double (%f)
%	column16: double (%f)
%   column17: double (%f)
%	column18: double (%f)
%   column19: double (%f)
%	column20: double (%f)
%   column21: double (%f)
%	column22: double (%f)
%   column23: double (%f)
%	column24: double (%f)
%   column25: text (%s)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%f%s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to format string.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow(1)-startRow(1)+1, 'Delimiter', delimiter, 'EmptyValue' ,NaN,'HeaderLines', startRow(1)-1, 'ReturnOnError', false);
for block=2:length(startRow)
    frewind(fileID);
    dataArrayBlock = textscan(fileID, formatSpec, endRow(block)-startRow(block)+1, 'Delimiter', delimiter, 'EmptyValue' ,NaN,'HeaderLines', startRow(block)-1, 'ReturnOnError', false);
    for col=1:length(dataArray)
        dataArray{col} = [dataArray{col};dataArrayBlock{col}];
    end
end

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
subject = dataArray{:, 1};
run1 = dataArray{:, 2};
trial = dataArray{:, 3};
accuracy = dataArray{:, 4};
delay = dataArray{:, 5};
disc_size = dataArray{:, 6};
reward_at_stake = dataArray{:, 7};
target_value = dataArray{:, 8};
error1 = dataArray{:, 9};
memorandum_x = dataArray{:, 10};
memorandum_y = dataArray{:, 11};
actual_location_x = dataArray{:, 12};
actual_location_y = dataArray{:, 13};
target_loc_quadrant = dataArray{:, 14};
target_loc_angle = dataArray{:, 15};
distractor1_value = dataArray{:, 16};
distractor1_loc_quadrant = dataArray{:, 17};
distractor1_loc_angle = dataArray{:, 18};
distractor2_value = dataArray{:, 19};
distractor2_loc_quadrant = dataArray{:, 20};
distractor2_loc_angle = dataArray{:, 21};
distractor3_value = dataArray{:, 22};
distractor3_loc_quadrant = dataArray{:, 23};
distractor3_loc_angle = dataArray{:, 24};
VarName25 = dataArray{:, 25};


